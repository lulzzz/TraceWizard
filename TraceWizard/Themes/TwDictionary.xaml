<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:properties="clr-namespace:TraceWizard.TwApp.Properties"
    xmlns:dg="http://schemas.microsoft.com/wpf/2008/toolkit"
    xmlns:local="clr-namespace:TraceWizard.TwApp"                    
>
    <properties:Settings x:Key="Settings" />
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <local:TagConverter x:Key="TagConverter"/>

    <Style x:Key="GroupBoxBorderStyle" TargetType="{x:Type Border}" >
        <Setter Property="Margin" Value="4" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}" >
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <Style x:Key="ToolBarToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True" />
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="BorderBrush" Value="Yellow" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ToolBarRepeatButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True" />
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarFixtureRepeatButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ToolBarRepeatButtonStyle}">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Margin" Value="1,1" />
    </Style>

    <Style x:Key="ToolBarFixtureLowFrequencyRepeatButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ToolBarFixtureRepeatButtonStyle}">
        <Setter Property="Padding" Value="3,3" />
    </Style>

    <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
    <!--Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}"-->
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True" />
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarFixtureButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolBarButtonStyle}">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Margin" Value="1,1" />
    </Style>

    <Style x:Key="ToolBarFixtureLowFrequencyButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolBarFixtureButtonStyle}">
        <Setter Property="Padding" Value="3,3" />
    </Style>
    
    <Style x:Key="ToolBarDropDownButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolBarButtonStyle}">
        <Setter Property="Padding" Value="0,4" />
    </Style>

    <Style x:Key="ToolBarComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}">
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="DarkGray" />
    </Style>

    <Style x:Key="SmallLabelStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LabelStyle}" >
        <Setter Property="FontSize" Value="9" />
    </Style>

    <Style x:Key="StatusBarTextBlockStyle" TargetType="{x:Type TextBlock}" >
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="StatusBarTextBlockSeparatorStyle" TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource StatusBarTextBlockStyle}" >
        <Setter Property="FontSize" Value="14" />
    </Style>
    
    <Style x:Key="HorizontalSeparatorStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Margin" Value="0,3"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="LightGray"/>
    </Style>
    
    <Style x:Key="FixtureBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="FixtureImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="None" />
    </Style>
    
    <Style x:Key="ImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="None" />
    </Style>
</ResourceDictionary>